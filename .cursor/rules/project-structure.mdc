---
description: 
globs: 
alwaysApply: true
---
# Project Structure Guide

This repository contains a Chrome extension for scraping tweets from X (formerly Twitter) and a mini web-app for viewing the scraped data.

## High-level layout

| Path | Purpose |
|------|---------|
| [manifest.json](mdc:manifest.json) | Chrome extension manifest declaring permissions, scripts and icons |
| [background.js](mdc:background.js) | Background service worker handling messaging, alarms and storage |
| [content-script.js](mdc:content-script.js) | Injected into twitter.com pages to collect tweet data and relay it to the background script |
| [js/](mdc:js) | Shared utility and data-extraction modules used by both the content script and background |
| [data-viewer/](mdc:data-viewer) | Stand-alone web page to browse the scraped data using local IndexedDB |
| [icons/](mdc:icons) | Extension icons |
| [popup/](mdc:popup) | Browser-action popup UI |

## Runtime flow (overview)

1. The content script running in the twitter tab scrapes tweet information with helpers from [js/data-extractor.js](mdc:js/data-extractor.js) and sends it to the background script.
2. The background script persists the data in IndexedDB via [js/database.js](mdc:js/database.js).
3. The user can open the Data Viewer (`chrome-extension://<id>/data-viewer.html`) which loads [data-viewer/src/DataViewer.js](mdc:data-viewer/src/DataViewer.js). That app reads data through [data-viewer/src/data/TweetDataService.js](mdc:data-viewer/src/data/TweetDataService.js) using [data-viewer/src/data/IndexedDBRepository.js](mdc:data-viewer/src/data/IndexedDBRepository.js).

## Data Viewer internals

* State management lives in [data-viewer/src/state/AppState.js](mdc:data-viewer/src/state/AppState.js).
* Pure UI components (e.g., [TweetGrid.js](mdc:data-viewer/src/ui/TweetGrid.js)) live under `src/ui`.
* Shared helpers live under `src/utils`.

## How to locate functionality

* If you need browser-extension wiring (messaging, alarms) look in [background.js](mdc:background.js) and [content-script.js](mdc:content-script.js).
* Data parsing utilities are primarily in [js/utils.js](mdc:js/utils.js) and in [data-viewer/src/utils](mdc:data-viewer/src/utils).
* Any new UI element for the data viewer belongs in `data-viewer/src/ui`.
